
--

- hosts: scylla_db
  become: yes                  
  vars:
    release: 3.1.0               
    cluster_name: cluster_test 
    seeds: "n1.cluster, n2.cluster, n3.cluster"
    NIC: eth0 


  tasks:
  - name: Install add-apt-repository command utility on Debian 
    package: name=software-properties-common state=present

  - name: Download Scylla {{ release }} repo for Debian 8 (Jessie)
    get_url: url=http://downloads.scylladb.com.s3.amazonaws.com/deb/debian/scylla-{{release}}-jessie.list dest=/etc/apt/sources.list.d/scylla.list

  - name: Add openjdk PPA to Debian (prereq for Java 8)
    apt_repository: repo="ppa:openjdk-r/ppa" codename='trusty'

  - name: Add Jessie-backports repo to Debian (prereq for Java 8)
    apt_repository: repo="deb http://http.debian.net/debian jessie-backports main"

  - name: Update apt cache on Debian 
    apt: update_cache=true

  - name: Install Java 8 on Debian, needed for Scylla release 1.7
    apt: name=openjdk-8-jre-headless state=latest default_release=jessie-backports

  - name: Update apt cache on Debian / Ubuntu
    apt: update_cache=true

  - name: Install scylla {{ release }} on Debian / Ubuntu
    apt: name=scylla state=present allow_unauthenticated=yes force=yes

  - name: Select correct java version on Debian / Ubuntu14
    alternatives: name=java path=/usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java

  - name: Configure Cluster name in yaml file
    shell: sed -i -- 's/Test Cluster/{{ cluster_name }}/g' /etc/scylla/scylla.yaml

  - name: Configure seeds in yaml file
    shell: sed -i -- '/seeds/s/127.0.0.1/{{ seeds }}/g' /etc/scylla/scylla.yaml

  - name: Configure listen address + rpc address in yaml file
    shell: sed -i -- "s/localhost/$(hostname -i)/g" /etc/scylla/scylla.yaml

  - name: Run Scylla Setup (RAID-0, XFS format, NIC queue, disk IOtune), this may take a while
    shell: scylla_setup --nic {{ NIC }} --setup-nic

  - name: Reboot server/s (required by Scylla)
    become: yes
    shell: sleep 2 && shutdown -r now "Ansible reboot"
    async: 1
    poll: 0
    ignore_errors: true

  - name: Wait for server/s to come up from boot
    local_action: wait_for host={{ inventory_hostname }} state=started port=22 delay=30 timeout=300 connect_timeout=60
    become: false
  